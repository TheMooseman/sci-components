name: Release
on:
  push:
    # NOTE(thuang): Since REGEX is not supported for branches, we cannot target
    # any versioned branch: "+([0-9])?(.{+([0-9]),x}).x" as specified in
    # .releaserc.js. So we'll need to manually add such branch's name here manually
    branches:
      - prod
      - next
      - next-major
      - beta
      - alpha

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"

      - name: "Setup npm"
        run: |
          npm set registry=//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
          npm set "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Ensure NPM access
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn ci

      - name: Build component library in dist/
        run: yarn build

      - name: Config git user
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Lerna Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn version:ci

      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ github.head_ref }}

      - name: Lerna Publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: yarn publish:ci

      - name: Checkout main
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Reset promotion branch
        run: |
          git fetch origin prod:prod
          git reset --hard prod

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Merge changes from prod to main"
          title: "chore(release): Merge changes from prod to main"
          body: "This pull request merges changes from the prod branch to main after Lerna publish."
          branch: main-promotion
          base: main

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_EVENT: ${{ toJson(github.event) }}
          GITHUB_COMMITS: ${{ toJson(github.event.commits) }}
        run: |
          echo "$GITHUB_CONTEXT"
          echo "$GITHUB_EVENT"
          echo "$GITHUB_COMMITS"

      - name: Post breaking changes to a Slack channel
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        uses: act10ns/slack@v1
        with:
          status: complete
          config: .github/slack-breaking-changes.yml
        if: contains(github.event.commits.*.message, 'breaking changes')
